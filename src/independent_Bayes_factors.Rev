
#
# Rev code the for the most general independent model (1,1,2,2,3,3,4,4)
# described in Pagel and Meade (2006).
#
# by Will Freyman
#


# read in data
tree_obs <- readTrees("data/phylo.tree")[1]
morph_data <- readCharacterData("data/correlated.nex")

# character state transition rate matrix
q_12 ~ dnExponential(10)
q_13 ~ dnExponential(10)
q_21 ~ dnExponential(10)
q_24 := q_13
q_31 ~ dnExponential(10)
q_34 := q_12
q_42 := q_31
q_43 := q_21
Q_morph := fnFreeK([q_12, q_13, 0, q_21, 0, q_24, q_31, 0, q_34, 0, q_42, q_43], rescaled=FALSE)

# root frequencies
pi_morph ~ dnDirichlet([1,1,1,1])

# phylo CTMC
ctmc_morph ~ dnPhyloCTMC(tree_obs, Q=Q_morph, rootFrequencies=pi_morph, nSites=1, type="Standard")
ctmc_morph.clamp(morph_data)

mymodel = model(ctmc_morph)

# moves
moves[1] = mvScale(q_12)
moves[2] = mvScale(q_13)
moves[3] = mvScale(q_21)
moves[4] = mvScale(q_31)
moves[5] = mvSimplexElementScale(pi_morph)

# monitors
monitors[1] = mnScreen(printgen=10)

# set up and run power posterior analysis
pow_p = powerPosterior(mymodel, moves, monitors, "output/independent.out", cats=50)
pow_p.burnin(generations=100, tuningInterval=10)
pow_p.run(generations=100)

# calculate marginal likelihood
ss = steppingStoneSampler(file="output/independent.out", 
                          powerColumnName="power", 
                          likelihoodColumnName="likelihood")
ss.marginal()
q()
